from itertools import product

WORKLOADS = [
  "a_key_99",
  "a_key_59",
  "a_page_99",
  "a_page_59",
]

CONFIGS = [
  {
    "record_size_bytes": 64,
    "cache_size_mib": 407,
    "records_per_page": 50,
    "log_writes_period": 1000000,  # ~61 MiB
  },
  {
    "record_size_bytes": 1024,
    "cache_size_mib": 6512,
    "records_per_page": 3,
    "log_writes_period": 62500,    # ~61 MiB
  },
]

run_experiment_group(
  name="sim_rcache",
  run="./run.sh",
  experiments=[
    ExperimentInstance(
      name="sim_rcache-{}-{}".format(workload, config["record_size_bytes"]),
      args=["{}.yml".format(workload)],
      options=config,
    )
    for workload, config in product(WORKLOADS, CONFIGS)
  ],
)

run_command(
  name="combine",
  run="python3 combine.py",
  deps=[":sim_rcache"],
)

combine(
  name="sim_rcache_key",
  deps=[
    ":sim_rcache-a_key_99-64",
    ":sim_rcache-a_key_99-1024",
    ":sim_rcache-a_key_59-64",
    ":sim_rcache-a_key_59-1024",
  ],
)

run_experiment_group(
  name="sim_belady",
  run="./run_belady.sh",
  experiments=[
    ExperimentInstance(
      name="sim_belady-{}".format(workload),
      args=["{}.yml".format(workload)],
      options={
        # Corresponds to the memory budget specified at the top of this file.
        "cache_capacity": 6668288,
      },
    )
    # Key skew experiments only
    for workload in WORKLOADS if "page" not in workload
  ],
)
